plugins {
    id("groovy")
    id("io.micronaut.application") version "1.2.0"
    id("com.google.cloud.tools.jib") version "2.6.0"
	id("com.github.johnrengelman.shadow") version "6.1.0"
	id "org.sonarqube" version "2.7"
	id "java"
	id "application"
}

version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
    jcenter()
}

micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
}

dependencies {
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")
	annotationProcessor "io.micronaut:micronaut-inject-java"
	annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
	annotationProcessor "io.micronaut:micronaut-validation"
	
	implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
	implementation "io.swagger.core.v3:swagger-annotations"
    compileOnly("org.graalvm.nativeimage:svm")
	
	compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
	compile group: 'commons-io', name: 'commons-io', version: '2.6'
	compile group: 'javax.json', name: 'javax.json-api', version: '1.1.4'
	compile group: 'org.apache.johnzon', name: 'johnzon-core', version: '1.2.6'
	implementation "net.logstash.logback:logstash-logback-encoder:5.0"
	compile group: 'ch.qos.logback', name: 'logback-access', version: '1.2.3'
	runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
	
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut.mongodb:micronaut-mongo-reactive")
	
	
	implementation 'org.apache.commons:commons-lang3:3.6'
	
    runtimeOnly("ch.qos.logback:logback-classic")
    testImplementation("de.flapdoodle.embed:de.flapdoodle.embed.mongo:2.0.1")
}


application {
    mainClass.set("com.example.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("1.8")
    targetCompatibility = JavaVersion.toVersion("1.8")
}

tasks {


    jib {
        to {
            image = "gcr.io/myapp/jib-image"
        }
    }
}

tasks.withType(JavaCompile){
	options.encoding = "UTF-8"
	options.compilerArgs = [
			'-Amapstruct.suppressGeneratorTimestamp=true'
	]
	options.fork = true
	options.forkOptions.jvmArgs << '-Dmicronaut.openapi.views.spec=rapidoc.enabled=true,swagger-ui.enabled=true,swagger-ui.theme=flattop'
}

